一、常用命令
1、建/删库
    CREATE DATABASE IF NOT EXISTS htn CHARACTER SET utf8 COLLATE utf8_general_ci;
    drop database if exists htn;

2、创建/删用户
    grant all privileges on  htn.* to  'htn'@'%' identified by '123456';
    flush privileges;
    或
    create user 'htn'@'%' identified by '123456';
    grant all privileges on  htn.* to  'htn'@'%';
    flush privileges;

    drop user if exists htn;
    flush privileges;


3、建/删表
    CREATE TABLE `user`(  
    `id` BIGINT NOT NULL AUTO_INCREMENT,
    `email` VARCHAR(200) NOT NULL,
    `password` VARCHAR(200) NOT NULL,
    PRIMARY KEY (`id`)
    ) ENGINE=INNODB CHARSET=utf8 COLLATE=utf8_general_ci;

    drop table if exists user;

    CREATE TABLE user_without_pwd AS SELECT email,nickname from user limit 1;

4、建/删索引
    CREATE INDEX idx_user_0 ON user(email,password);
    CREATE UNIQUE INDEX idx_user_1 ON user(email);

    drop index idx_user_0 on user;

5、修改表结构
    alter table table_name sub_command [options]
    比如： 
        ALTER TABLE t1 ROW_FORMAT = COMPRESSED;
        ALTER TABLE t1 AUTO_INCREMENT = 13;
        ALTER TABLE t1 CHARACTER SET = utf8;

        ALTER TABLE t1 CHANGE b b BIGINT NOT NULL;
        ALTER TABLE t1 MODIFY col1 BIGINT UNSIGNED DEFAULT 1 COMMENT 'my column';
        
        ALTER TABLE `htn`.`user` ADD COLUMN `latest_update_pwd` TIMESTAMP DEFAULT NOW()   NOT NULL AFTER `password`;

6、创建触发器
    delimiter $$

    create trigger aft_ins_user after insert on user
    for each row
    begin
        insert into user_without_pwd(email) value(new.email);
    end$$

    delimiter ;

    删除：
    drop trigger if exists trigger_name;

    开启binary log后，需要在ini文件中设置相应的variable才能创建触发器：
        [mysqld]
        log_bin_trust_function_creators=1

    before|after
    insert|update|delete
    new|old
    in insert statement only new can be used; in delete statement only old can be used.

7、存储过程(procedure或者function)

    USE `htn`;

    DROP PROCEDURE IF EXISTS `update_user_password`;
    DELIMITER $$

    CREATE PROCEDURE `update_user_password`(IN expireDays INT, OUT updatedAmount INT)
    BEGIN
        DECLARE email VARCHAR(200);
        DECLARE retVal INT DEFAULT 0;
        DECLARE done INT DEFAULT 0;
        DECLARE curNeedUpdate CURSOR FOR SELECT `email` FROM `user`  WHERE DATEDIFF(`latest_update_pwd`, NOW()) > expireDays;
        DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
        
        OPEN curNeedUpdate;
        
        REPEAT
            FETCH curNeedUpdate INTO email;
            UPDATE `user` SET `password` = PASSWORD('123456'), `latest_update_pwd`=NOW() WHERE `email`=email;
            SET retVal = retVal + 1;
        UNTIL done END REPEAT;
        CLOSE curNeedUpdate;
        SET updatedAmount = retVal;
        END$$

    DELIMITER ;

    执行：
    call update_user_password(-1, @num);
    select @num;

    其中：@num以@开通，表明是用户定义的变量。如果是2个@，代表系统变量。

8、定义事件

    delimiter $$
    create event everyday_update_user_password
    on schedule at
    CURRENT_TIMESTAMP + interval 1 day
    do
    begin
    call update_user_password(30,@num);
    end$$
    DELIMITER ;

9、定义函数

    USE `htn`;

    DROP function IF EXISTS `hello`;
    DELIMITER $$

    CREATE FUNCTION `hello` (s CHAR(20))
        RETURNS CHAR(50) DETERMINISTIC
    begin
        RETURN CONCAT('Hello, ',s,'!');
    end$$

    DELIMITER ;

    执行：
    select hello('world');
    
10、insert
    INSERT INTO user (email,password) VALUES ('1@1.com',PASSWORD('123456')),('2@2.com',PASSWORD('123456'));

    SELECT last_insert_id();

    INSERT INTO user_without_pwd SELECT email,nickname from user; 

11、update
    UPDATE user SET nickname='ahaha' WHERE email='1@1.com';

    UPDATE user_without_pwd AS uwp JOIN user AS u ON uwp.email=u.email AND u.nickname='ahaha' SET uwp.nickname='ahaha';

12、delete
    DELETE FROM user_without_pwd WHERE email='1@1.com';

    DELETE user_without_pwd FROM user_without_pwd JOIN user ON user_without_pwd.email=user.email AND user.email='2@2.com';



 CREATE TABLE `user_order`(  
    `id` BIGINT NOT NULL AUTO_INCREMENT,
    `user_id` BIGINT NOT NULL,
    `order_no` VARCHAR(50) NOT NULL,
    `order_time` DATETIME NOT NULL,
    PRIMARY KEY (`id`)
    ) ENGINE=INNODB CHARSET=utf8 COLLATE=utf8_general_ci;

    set @rownum:=0;
    INSERT INTO user_order (user_id,order_no,order_time) SELECT id, concat(id,'-',@rownum := @rownum + 1) ,NOW() FROM user;
    INSERT INTO user_order (user_id,order_no,order_time) SELECT id, concat(id,'-',@rownum := @rownum + 1) ,NOW() FROM user;
    INSERT INTO user_order (user_id,order_no,order_time) SELECT id, concat(id,'-',@rownum := @rownum + 1) ,NOW() FROM user;
    set @rownum:=null;


select uo.order_no, uo.order_time,uwp.nickname
from user u, user_order uo, user_without_pwd uwp
where u.id=uo.user_id
  and u.email = uwp.email
  and u.email='1@1.com';


select uo.order_no, uo.order_time,uwp.nickname
from user u 
    join user_order uo on u.id=uo.user_id 
    join user_without_pwd uwp on u.email = uwp.email
where u.email='1@1.com';


select uo.order_no, uo.order_time,uwp.nickname
from user_order uo 
    join user u on u.id=uo.user_id 
    join user_without_pwd uwp on u.email = uwp.email
where u.email='1@1.com';

select u.email,uwp.nickname
from user u left join user_without_pwd uwp on u.email=uwp.email

二、管理命令
1、查看mysql配置
    root用户登录，执行下边命令：
    show variables;
    或者
    show variables like '%xxxx%';

2、查看数据库列表
    show databases;

3、选择数据库
    use database_name;

4、查看表列表
    show tables;

5、查看表定义
    desc table_name;

6、修改用户密码
    ALTER USER 'htn'@'localhost' IDENTIFIED BY '123456';

7、修改配置
    set variable_name value;

    例如，查看并修改最大连接数量：
    show variables like '%max_connection%';
    set global max_connections = 200;

    注意：set修改的只是当前正在运行的mysql的参数，一旦重启，设置就会恢复到配置文件的状态。

8、查看连接列表
    show full processlist;

9、查看数据库状态
    show status;
    或者
    show status like '%xxxxx%';

    比如：
    show status like 'Max_used_connections';

10、输出执行结果到文件
    tee file_path;
    之后命令的执行过程都会记录到file_path中。

    notee;

11、查看引擎
    show engines;

12、查看触发器
    use db_name;
    show triggers\G

    查看触发器定义：
    show create trigger trigger_name\G

13、定界符
    delimiter $$
    ......
    delimiter ;
    默认定界符是分号，如果在命令行中输入存储过程，内容中会有分号，所以需要重定义定界符。

14、执行sql文件
    source sql_file_path;

15、查看存储过程(function同)
    show procedure status\G
    查看定义：
    show create procedure procedure_name\G

16、查看事件
    show events;

17、查看collation
    show collation;
    结果说明：
        Non_unique：是否不唯一。1代表可以重复。
        Seq_in_index：列在索引中的序号，从1开始。
        Collation：排序方式，A：升序，null：不排序。
        Cardinality：基数，不重复值的格式，基数越大，索引效率越高。

18、查看view
show full tables in ywt where table_type like 'VIEW';

99、help.................